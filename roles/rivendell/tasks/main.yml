---
- name: Install rivendell dependencies
  package:
    name="{{ item }}"
    state=present
  with_items: "{{ rivendell.pkgs }}"
  tags: [ "rivendell" ]

- name: Test if rivendell is already installed
  stat: path=/usr/local/bin/rdadmin
  register: rd_admin
  tags: [ "rivendell" ]

- debug: msg="Rivendell is installed"
  when: rd_admin.stat.exists
  tags: [ "rivendell" ]

- name: "Download rivendell-{{ rivendell.version }} from source"
  get_url:
    url: "http://www.rivendellaudio.org/ftpdocs/rivendell/rivendell-{{ rivendell.version }}.tar.gz"
    dest: "{{ rivendell.src_dir }}"
  register: source
  # when: not rd_admin.stat.exists
  tags: [ "rivendell" ]

- name: "Unarchive rivendell-{{ rivendell.version }}.tar.gz"
  unarchive:
    src="{{ rivendell.src_dir }}/rivendell-{{ rivendell.version }}.tar.gz"
    dest="{{ rivendell.src_dir }}"
    remote_src=yes
  when: source.changed
  tags: [ "rivendell" ]

- name: Configure
  command: "./configure"
  args:
    chdir: "{{ rivendell.src_dir }}/rivendell-{{ rivendell.version }}"
    creates: "{{ rivendell.src_dir }}/rivendell-{{ rivendell.version }}/cae/Makefile"
  when: source.changed
  tags: [ "rivendell" ]

- name: Make package
  # become: yes
  # become_user: "{{ user.name }}"
  make:
    chdir: "{{ rivendell.src_dir }}/rivendell-{{ rivendell.version }}"
    target: "{{ item }}"
    params:
      LDFLAGS: -lpthread
  with_items:
    - all
    - install
  when: source.changed
  tags: [ "rivendell" ]

- name: daemon reload
  command: systemctl daemon-reload
  when: source.changed
  tags: [ "rivendell" ]

#- name: Remove source files.
#  file:
#    path: "{{ item }}"
#    state: absent
#  with_items:
#    - "{{ rivendell.src_dir }}/rivendell-{{ rivendell.version }}.tar.gz"
#    - "{{ rivendell.src_dir }}/rivendell-{{ rivendell.version }}"
#  tags: [ "rivendell" ]

- name: Create rivendell directories
  file:
    path="{{ item }}"
    state=directory
    owner="{{ user.name }}"
    group="{{ user.group }}"
    mode=0755
  with_items:
    - /var/run/rivendell
    - "/home/{{ user.name }}/rdlogs"
  tags: [ "rivendell" ]

- name: Generate /etc/rd.conf
  template:
    src=rd.conf.j2
    dest="/etc/rd.conf"
    owner=root
    group=root
    mode=0644
  tags: [ "rivendell" ]

- name: Create rivendell groups
  group:
    name="{{ item }}"
    state=present
  tags: [ "rivendell", "user" ]
  with_items: "{{ user.groups }}"

- name: Add "{{ user.name }}" to audio groups
  user:
    name="{{ user.name }}"
    groups="{{ item }}"
    append=yes
  tags: [ "rivendell", "user" ]
  with_items: "{{ user.groups }}"
    
- name: Start rivendell system daemons
  service:
    name=rivendell
    enabled=yes
    # state=started
  tags: [ "rivendell" ]
